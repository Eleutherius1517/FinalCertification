server:
  port: 8003

spring:
  application:
    name: notification-service
  datasource:
    url: jdbc:postgresql://postgres:5432/social_analytics
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST}
    port: ${SPRING_RABBITMQ_PORT}
    username: ${SPRING_RABBITMQ_USERNAME}
    password: ${SPRING_RABBITMQ_PASSWORD}
  cloud:
    discovery:
      enabled: false

eureka:
  client:
    enabled: false

keycloak:
  auth-server-url: ${KEYCLOAK_AUTH-SERVER-URL}
  realm: ${KEYCLOAK_REALM}
  resource: ${KEYCLOAK_RESOURCE}
  credentials:
    secret: ${KEYCLOAK_CREDENTIALS_SECRET}

rabbitmq:
  queue:
    notifications: notifications
  exchange:
    notifications: notifications
  routing:
    key:
      notifications: notifications

telegram:
  bot:
    token: ${TELEGRAM_BOT_TOKEN}
    username: ${TELEGRAM_BOT_USERNAME}

logging:
  level:
    com.socialanalytics.notification: DEBUG
    org.springframework.amqp: INFO 