version: '3.8'

services:
  keycloak-init:
    image: mcr.microsoft.com/powershell:latest
    volumes:
      - .:/app
      - ./.env:/app/.env
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
    depends_on:
      - keycloak
    command: >
      pwsh -c "
        Write-Host 'Waiting for Keycloak to start...';
        Start-Sleep -Seconds 30;
        Write-Host 'Starting Keycloak initialization...';
        pwsh /app/init-keycloak.ps1;
        exit 0
      "

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HEALTH_ENABLED: "true"
    command: start-dev --db=postgres
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: keycloak,social_analytics
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}

  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana:10.0.0
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana

  api-gateway:
    build: ./api-gateway
    ports:
      - "8000:8000"
    environment:
      SPRING_CLOUD_GATEWAY_ROUTES_0_ID: auth-service
      SPRING_CLOUD_GATEWAY_ROUTES_0_URI: http://auth-service:8081
      SPRING_CLOUD_GATEWAY_ROUTES_0_PREDICATES_0: Path=/api/auth/**
      SPRING_CLOUD_GATEWAY_ROUTES_1_ID: data-processing-service
      SPRING_CLOUD_GATEWAY_ROUTES_1_URI: http://data-processing-service:8002
      SPRING_CLOUD_GATEWAY_ROUTES_1_PREDICATES_0: Path=/api/data/**
      SPRING_CLOUD_GATEWAY_ROUTES_2_ID: notification-service
      SPRING_CLOUD_GATEWAY_ROUTES_2_URI: http://notification-service:8003
      SPRING_CLOUD_GATEWAY_ROUTES_2_PREDICATES_0: Path=/api/notifications/**
      SPRING_CLOUD_GATEWAY_ROUTES_3_ID: social-integrator-service
      SPRING_CLOUD_GATEWAY_ROUTES_3_URI: http://social-integrator-service:8004
      SPRING_CLOUD_GATEWAY_ROUTES_3_PREDICATES_0: Path=/api/social/**
      KEYCLOAK_AUTH-SERVER-URL: http://keycloak:8080
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_RESOURCE: api-gateway
      KEYCLOAK_CREDENTIALS_SECRET: ${KEYCLOAK_API_GATEWAY_SECRET}
    depends_on:
      - keycloak
      - auth-service
      - data-processing-service
      - notification-service
      - social-integrator-service

  auth-service:
    build: ./auth-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/social_analytics
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_RESOURCE: auth-service
      KEYCLOAK_CREDENTIALS_SECRET: ${KEYCLOAK_AUTH_SERVICE_SECRET}
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: http://keycloak:8080/realms/${KEYCLOAK_REALM}/protocol/openid-connect/certs
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/${KEYCLOAK_REALM}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_BOT_USERNAME: ${TELEGRAM_BOT_USERNAME}
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_started

  data-processing-service:
    build: ./data-processing-service
    ports:
      - "8002:8002"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/social_analytics
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_DEFAULT_USER}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_DEFAULT_PASS}
      KEYCLOAK_AUTH-SERVER-URL: http://keycloak:8080
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_RESOURCE: data-processing-service
      KEYCLOAK_CREDENTIALS_SECRET: ${KEYCLOAK_DATA_PROCESSING_SECRET}
    depends_on:
      - mongodb
      - rabbitmq
      - keycloak

  notification-service:
    build: ./notification-service
    ports:
      - "8003:8003"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/social_analytics
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_DEFAULT_USER}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_DEFAULT_PASS}
      KEYCLOAK_AUTH-SERVER-URL: http://keycloak:8080
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_RESOURCE: notification-service
      KEYCLOAK_CREDENTIALS_SECRET: ${KEYCLOAK_NOTIFICATION_SECRET}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_BOT_USERNAME: ${TELEGRAM_BOT_USERNAME}
    depends_on:
      - rabbitmq
      - keycloak
      - postgres

  social-integrator-service:
    build: ./social-integrator-service
    ports:
      - "8004:8004"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/social_analytics
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_DEFAULT_USER}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_DEFAULT_PASS}
      KEYCLOAK_AUTH-SERVER-URL: http://keycloak:8080
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_RESOURCE: social-integrator-service
      KEYCLOAK_CREDENTIALS_SECRET: ${KEYCLOAK_SOCIAL_INTEGRATOR_SECRET}
    depends_on:
      - rabbitmq
      - keycloak

  frontend:
    build: ./frontend
    ports:
      - "3001:3001"
    environment:
      REACT_APP_API_URL: http://localhost:8000
      REACT_APP_KEYCLOAK_URL: http://localhost:8080
      REACT_APP_KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      REACT_APP_KEYCLOAK_CLIENT_ID: frontend
    depends_on:
      - api-gateway
      - keycloak

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  prometheus_data:
  grafana_data: 